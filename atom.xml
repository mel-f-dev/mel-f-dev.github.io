<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="https://www.w3.org/2005/Atom">
  <title>TIL by Mel</title>
  <icon>https://www.gravatar.com/avatar/ec5e94312995f335200c99ca1593bbef</icon>
  <subtitle>Today I Learned by Mel</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite-url/"/>
  <updated>2019-11-25T11:54:55.052Z</updated>
  <id>http://yoursite-url/</id>
  
  <author>
    <name>Mel</name>
    <email>mel.f.dev@gmail.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[알고리즘] 완주하지 못한 선수</title>
    <link href="http://yoursite-url/2019/11/25/Al-20191125/"/>
    <id>http://yoursite-url/2019/11/25/Al-20191125/</id>
    <published>2019-11-25T10:52:43.000Z</published>
    <updated>2019-11-25T11:54:55.052Z</updated>
    
    <content type="html"><![CDATA[<h3><span id="문제">문제</span></h3><p>수많은 마라톤 선수들이 마라톤에 참여하였습니다.<br><strong>단 한 명의 선수를 제외하고는 모든 선수가 마라톤을 완주하였습니다.</strong></p><p>마라톤에 참여한 선수들의 이름이 담긴 배열 participant와 완주한 선수들의 이름이 담긴 배열 completion이 주어질 때, 완주하지 못한 선수의 이름을 return 하도록 solution 함수를 작성해주세요.</p><hr><h3><span id="제한사항">제한사항</span></h3><ul><li>마라톤 경기에 참여한 선수의 수는 1명 이상 100,000명 이하입니다.</li><li>completion의 길이는 participant의 길이보다 1 작습니다.</li><li>참가자의 이름은 1개 이상 20개 이하의 알파벳 소문자로 이루어져 있습니다.</li><li>참가자 중에는 동명이인이 있을 수 있습니다.</li></ul><hr><h3><span id="입출력-예제">입출력 예제</span></h3><table><thead><tr><th style="text-align:center">participant</th><th style="text-align:center">completion</th><th style="text-align:center">return</th></tr></thead><tbody><tr><td style="text-align:center">[“leo”, “kiki”, “eden”]</td><td style="text-align:center">[“eden”, “kiki”]</td><td style="text-align:center">“leo”</td></tr><tr><td style="text-align:center">[“marina”, “josipa”, “nikola”, “vinko”, “filipa”]</td><td style="text-align:center">[“josipa”, “filipa”, “marina”, “nikola”]</td><td style="text-align:center">“vinko”</td></tr><tr><td style="text-align:center">[“mislav”, “stanko”, “mislav”, “ana”]</td><td style="text-align:center">[“stanko”, “mislav”, “ana”]</td><td style="text-align:center">“mislav”</td></tr></tbody></table><hr><h3><span id="내-풀이">내 풀이</span></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span><span class="params">(participant, completion)</span>:</span> </span><br><span class="line">    <span class="comment"># 동명이인 처리(중복된 이름은 한 명만 완주 처리)</span></span><br><span class="line">    <span class="keyword">if</span> set(participant) == set(completion):</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> participant:</span><br><span class="line">            <span class="keyword">if</span> participant.count(i)==<span class="number">2</span>:</span><br><span class="line">                <span class="keyword">return</span> i</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        answer=[]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> participant:</span><br><span class="line">            <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> completion:</span><br><span class="line">                answer.append(i)</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">return</span> answer[<span class="number">0</span>]</span><br></pre></td></tr></table></figure><hr><h3><span id="채점결과">채점결과</span></h3><table><thead><tr><th style="text-align:center">기준</th><th style="text-align:center">점수</th></tr></thead><tbody><tr><td style="text-align:center">정확도</td><td style="text-align:center">30.0</td></tr><tr><td style="text-align:center">효율성*</td><td style="text-align:center">0.0</td></tr><tr><td style="text-align:center">합계</td><td style="text-align:center">30/100</td></tr></tbody></table><ul><li>예제로 주어진 입출력값은 정답.</li><li>이외의 입력값이 들어가면 올바른 출력값이 나오지 않는 것으로 추정.</li><li>답안 피드백 받은 후 수정 필요</li></ul><p>*효율성 : 시간복잡도에 대한 테스트. 프로그래머스에서 언어별로 제한한 실행 시간에 따라 점수 산정.</p><hr><h3><span id="다른사람-풀이">다른사람 풀이</span></h3><p>풀이1</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> collections</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span><span class="params">(participant, completion)</span>:</span></span><br><span class="line">    answer = collections.Counter(participant) - collections.Counter(completion)</span><br><span class="line">    <span class="keyword">return</span> list(answer.keys())[<span class="number">0</span>]</span><br></pre></td></tr></table></figure><hr><p>풀이2</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span><span class="params">(participant, completion)</span>:</span></span><br><span class="line">    participant.sort()</span><br><span class="line">    completion.sort()</span><br><span class="line">    <span class="keyword">for</span> p, c <span class="keyword">in</span> zip(participant, completion):</span><br><span class="line">        <span class="keyword">if</span> p != c:</span><br><span class="line">            <span class="keyword">return</span> p</span><br><span class="line">    <span class="keyword">return</span> participant[<span class="number">-1</span>]</span><br></pre></td></tr></table></figure><hr><h3><span id="출처">출처</span></h3><p><a href="https://programmers.co.kr/learn/courses/30/lessons/42576#" target="_blank" rel="noopener">프로그래머스</a><br><a href="http://hsin.hr/coci/archive/2014_2015/contest2_tasks.pdf" target="_blank" rel="noopener">원출처</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3&gt;&lt;span id=&quot;문제&quot;&gt;문제&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;수많은 마라톤 선수들이 마라톤에 참여하였습니다.&lt;br&gt;
&lt;strong&gt;단 한 명의 선수를 제외하고는 모든 선수가 마라톤을 완주하였습니다.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;마라톤에 참여한 선수
      
    
    </summary>
    
    
      <category term="알고리즘 문제풀이" scheme="http://yoursite-url/categories/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EB%AC%B8%EC%A0%9C%ED%92%80%EC%9D%B4/"/>
    
    
      <category term="TIL" scheme="http://yoursite-url/tags/TIL/"/>
    
      <category term="인문학도개발일지" scheme="http://yoursite-url/tags/%EC%9D%B8%EB%AC%B8%ED%95%99%EB%8F%84%EA%B0%9C%EB%B0%9C%EC%9D%BC%EC%A7%80/"/>
    
      <category term="괴발개발" scheme="http://yoursite-url/tags/%EA%B4%B4%EB%B0%9C%EA%B0%9C%EB%B0%9C/"/>
    
      <category term="python" scheme="http://yoursite-url/tags/python/"/>
    
      <category term="Today_I_Learned_by_Mel" scheme="http://yoursite-url/tags/Today-I-Learned-by-Mel/"/>
    
      <category term="프로그래머스" scheme="http://yoursite-url/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/"/>
    
      <category term="알고리즘" scheme="http://yoursite-url/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/"/>
    
  </entry>
  
  <entry>
    <title>[TIL] 20191118 Numpy2&amp;Pandas</title>
    <link href="http://yoursite-url/2019/11/18/TIL-20191118/"/>
    <id>http://yoursite-url/2019/11/18/TIL-20191118/</id>
    <published>2019-11-18T00:41:55.000Z</published>
    <updated>2019-11-19T02:23:08.182Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="오늘">오늘</span></h2><ul><li>빅데이터 수업<ul><li>09:00~09:55 : 지난주 복습, 범용함수(Ufunc, Universal function)</li><li>10:10~11:08 : 단항 범용함수, 이항 범용함수, 누적연산함수 reduce()</li><li>11:30~12:10 : 누적연산함수 accumulate(), 기술통계함수</li><li>12:28~12:50 : 기술통계함수</li><li>14:12~14:47 : 기술통계함수, 브로드 캐스팅</li><li>15:00~15:58 : 넘파이배열 파일로 저장하기, ndarray를 text 파일로 저장/읽기, 판다스</li></ul></li><li>ADsP<ul><li>기출 풀이</li><li>유튜브 강의 듣기</li></ul></li></ul><hr><h2><span id="블로그-개선할-점">블로그 개선할 점</span></h2><ul><li>구글 애널리틱스 수정<ul><li>참고 : <a href="https://irongaea.github.io/2018/08/23/hexo-anal/" target="_blank" rel="noopener">irongaea unpractical lab</a></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;오늘&quot;&gt;오늘&lt;/span&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;빅데이터 수업
&lt;ul&gt;
&lt;li&gt;09:00~09:55 : 지난주 복습, 범용함수(Ufunc, Universal function)&lt;/li&gt;
&lt;li&gt;10:10~11:08 : 단항 범
      
    
    </summary>
    
    
      <category term="TIL" scheme="http://yoursite-url/categories/TIL/"/>
    
    
      <category term="TIL" scheme="http://yoursite-url/tags/TIL/"/>
    
      <category term="인문학도개발일지" scheme="http://yoursite-url/tags/%EC%9D%B8%EB%AC%B8%ED%95%99%EB%8F%84%EA%B0%9C%EB%B0%9C%EC%9D%BC%EC%A7%80/"/>
    
      <category term="괴발개발" scheme="http://yoursite-url/tags/%EA%B4%B4%EB%B0%9C%EA%B0%9C%EB%B0%9C/"/>
    
      <category term="python" scheme="http://yoursite-url/tags/python/"/>
    
      <category term="Today_I_Learned_by_Mel" scheme="http://yoursite-url/tags/Today-I-Learned-by-Mel/"/>
    
      <category term="numpy" scheme="http://yoursite-url/tags/numpy/"/>
    
      <category term="hexo_blog" scheme="http://yoursite-url/tags/hexo-blog/"/>
    
      <category term="pandas" scheme="http://yoursite-url/tags/pandas/"/>
    
  </entry>
  
  <entry>
    <title>[TIL] 20191116 Women who Code</title>
    <link href="http://yoursite-url/2019/11/16/TIL-20191116/"/>
    <id>http://yoursite-url/2019/11/16/TIL-20191116/</id>
    <published>2019-11-16T13:46:48.000Z</published>
    <updated>2019-11-18T00:47:26.140Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="오늘">오늘</span></h2><ul><li>프로그래머스 알고리즘 하나 풀다가 실패했다.</li><li>백준 알고리즘 “Hello World!” 출력 문제 정답률이 40%인 이유는 해보면 안다.</li><li>블로그와 구글 애널리틱스 연동<ul><li><a href="https://www.codeameba.com/2019/04/16/tip-google-analytics/" target="_blank" rel="noopener">CodeAmeba 블로그</a></li></ul></li><li>Women Who Code Seoul 행사에 참여했다.<ul><li>데이터사이언스, 백엔드, 프론트엔드 개발자 등 다양한 분야에서 커리어를 쌓고 새로운 길을 만들어나가고 있는 분들을 보면서 상당히 큰 동기부여가 됐다.</li></ul></li></ul><h3><span id="good">good</span></h3><ul><li>구글 이소영 이사님과의 대화</li><li>연사로 나와 내적 친밀감 느끼게 해 준 벗의 등장</li><li>쉬운 알고리즘이지만 그래도 풀었다.</li></ul><h3><span id="bad">bad</span></h3><ul><li>사정상 네트워킹에 시간을 길게 할애하지 못했다… 아쉬워</li></ul><hr><h2><span id="내일-할-일">내일 할 일</span></h2><ul><li>ADsP공부</li><li>Numpy 복습</li></ul><hr><h2><span id="블로그-개선할-점">블로그 개선할 점</span></h2><ul><li>참고해보고 싶은 내용을 찾았다…<a href="https://busy.org/@jacobyu/4aow7v" target="_blank" rel="noopener">jacobyu 블로그</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;오늘&quot;&gt;오늘&lt;/span&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;프로그래머스 알고리즘 하나 풀다가 실패했다.&lt;/li&gt;
&lt;li&gt;백준 알고리즘 “Hello World!” 출력 문제 정답률이 40%인 이유는 해보면 안다.&lt;/li&gt;
&lt;li&gt;블로그와
      
    
    </summary>
    
    
      <category term="TIL" scheme="http://yoursite-url/categories/TIL/"/>
    
    
      <category term="TIL" scheme="http://yoursite-url/tags/TIL/"/>
    
      <category term="인문학도개발일지" scheme="http://yoursite-url/tags/%EC%9D%B8%EB%AC%B8%ED%95%99%EB%8F%84%EA%B0%9C%EB%B0%9C%EC%9D%BC%EC%A7%80/"/>
    
      <category term="괴발개발" scheme="http://yoursite-url/tags/%EA%B4%B4%EB%B0%9C%EA%B0%9C%EB%B0%9C/"/>
    
      <category term="python" scheme="http://yoursite-url/tags/python/"/>
    
      <category term="Today_I_Learned_by_Mel" scheme="http://yoursite-url/tags/Today-I-Learned-by-Mel/"/>
    
      <category term="hexo_blog" scheme="http://yoursite-url/tags/hexo-blog/"/>
    
      <category term="women_who_code" scheme="http://yoursite-url/tags/women-who-code/"/>
    
      <category term="google analytics" scheme="http://yoursite-url/tags/google-analytics/"/>
    
  </entry>
  
  <entry>
    <title>[TIL] 20191115 Numpy</title>
    <link href="http://yoursite-url/2019/11/15/TIL-20191115/"/>
    <id>http://yoursite-url/2019/11/15/TIL-20191115/</id>
    <published>2019-11-15T14:31:51.000Z</published>
    <updated>2019-11-15T15:54:58.159Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="오늘-한-일">오늘 한 일</span></h2><ul><li>numpy 기본개념 수업을 들었다. 어려워…</li><li>블로그 개선! 댓글 기능을 달았다.</li><li>ADsP 공부</li><li>스터디 머신러닝 책 구입</li></ul><h3><span id="good">good</span></h3><ul><li>Utterances를 활용해서 블로그에 댓글 기능을 더했다.<ul><li>덕분에 컴포넌트라는 기능에 대해 알게 됨</li><li>참고 : <a href="https://cheese10yun.github.io/utterances/" target="_blank" rel="noopener">Yun Blog</a></li></ul></li></ul><h3><span id="bad">bad</span></h3><ul><li>ADsP D-8, 아직도 책 내용을 완벽히 숙지하지 못했다.</li></ul><hr><h2><span id="내일-할-일">내일 할 일</span></h2><ul><li>Women Who Code Seoul, 이른 Year-end party 참가</li><li>ADsP 기출 17회 분석, 책 1독</li><li>Numpy 수업 복습</li><li>알고리즘 하나 풀고 기록</li></ul><hr><h2><span id="블로그-개선할-점">블로그 개선할 점</span></h2><ul><li>방문자수 체크 기능</li><li>오른쪽 사이드바 리스트랑 글 내용 연동시키기</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;오늘-한-일&quot;&gt;오늘 한 일&lt;/span&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;numpy 기본개념 수업을 들었다. 어려워…&lt;/li&gt;
&lt;li&gt;블로그 개선! 댓글 기능을 달았다.&lt;/li&gt;
&lt;li&gt;ADsP 공부&lt;/li&gt;
&lt;li&gt;스터디 머신러닝 책
      
    
    </summary>
    
    
      <category term="TIL" scheme="http://yoursite-url/categories/TIL/"/>
    
    
      <category term="TIL" scheme="http://yoursite-url/tags/TIL/"/>
    
      <category term="인문학도개발일지" scheme="http://yoursite-url/tags/%EC%9D%B8%EB%AC%B8%ED%95%99%EB%8F%84%EA%B0%9C%EB%B0%9C%EC%9D%BC%EC%A7%80/"/>
    
      <category term="괴발개발" scheme="http://yoursite-url/tags/%EA%B4%B4%EB%B0%9C%EA%B0%9C%EB%B0%9C/"/>
    
      <category term="python" scheme="http://yoursite-url/tags/python/"/>
    
      <category term="Today_I_Learned_by_Mel" scheme="http://yoursite-url/tags/Today-I-Learned-by-Mel/"/>
    
      <category term="numpy" scheme="http://yoursite-url/tags/numpy/"/>
    
      <category term="hexo_blog" scheme="http://yoursite-url/tags/hexo-blog/"/>
    
  </entry>
  
  <entry>
    <title>[TIL] 20191112 웹크롤링</title>
    <link href="http://yoursite-url/2019/11/13/20191113-TILBYMEL/"/>
    <id>http://yoursite-url/2019/11/13/20191113-TILBYMEL/</id>
    <published>2019-11-12T15:31:51.000Z</published>
    <updated>2019-11-15T15:35:49.580Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="오늘-한-일">오늘 한 일</span></h2><ul><li>BeautifulSoup, Requests, Selenium 활용 웹크롤링 팀 프로젝트 시작<ul><li>주제 선정 : 웹툰 각 화 별 제목, 등록일, 평점, 댓글 불러오기</li><li>목적 : 평점, 댓글, 작가 또는 작품에 대한 여론 간 상관관계 파악</li></ul></li><li>SK True Innovation ‘데이터 공유로 만들어 가는 새로운 가치’ 세미나 참여</li></ul><h1><span id></span></h1><h3><span id="good">good</span></h3><ul><li>주피터노트북으로 웹툰 ‘복학왕’ 각 화 제목, 등록일, 평점 크롤링 성공</li><li>다음소프트 송길영 부사장의 주옥같은 강연 - 나만의 라이프태그를 만들자!</li></ul><h3><span id="bad">bad</span></h3><ul><li>댓글 크롤링 실패 - 문제 분석 실패</li></ul><hr><h2><span id="반성할-부분">반성할 부분</span></h2><ul><li>웹크롤링 관련 코드 개념이 아직 머리에 정확히 인식되지 않음</li><li>그래서 언제 어떤 코드를 쓰는게 맞는지 확신이 없음</li><li>잘 되지 않으면 완전히 새로운 알고리즘을 짜보려고 시도할 수 있는 노력과 강단이 필요하다.</li></ul><hr><h2><span id="내일-할-일">내일 할 일</span></h2><ul><li>불러온 정보 왜, 어떻게 크롤링 했는지, 어떤 방법으로 활용할 것인지 정리</li><li>발표 준비하기<ul><li>준비하면서 잘못했던 부분, 잘 안 됐던 부분, 해결한 방법 등 꼼꼼히 정리</li></ul></li><li>ADsP 기출 분석 풀이 끝!</li></ul><hr><h2><span id="블로그에서-개선하고-싶은-부분">블로그에서 개선하고 싶은 부분</span></h2><ul><li>방문자수 확인, 댓글 입력 가능한 위젯 넣기</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;오늘-한-일&quot;&gt;오늘 한 일&lt;/span&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;BeautifulSoup, Requests, Selenium 활용 웹크롤링 팀 프로젝트 시작
&lt;ul&gt;
&lt;li&gt;주제 선정 : 웹툰 각 화 별 제목, 등록일, 평점,
      
    
    </summary>
    
    
      <category term="TIL" scheme="http://yoursite-url/categories/TIL/"/>
    
    
      <category term="TIL" scheme="http://yoursite-url/tags/TIL/"/>
    
      <category term="인문학도개발일지" scheme="http://yoursite-url/tags/%EC%9D%B8%EB%AC%B8%ED%95%99%EB%8F%84%EA%B0%9C%EB%B0%9C%EC%9D%BC%EC%A7%80/"/>
    
      <category term="괴발개발" scheme="http://yoursite-url/tags/%EA%B4%B4%EB%B0%9C%EA%B0%9C%EB%B0%9C/"/>
    
      <category term="python" scheme="http://yoursite-url/tags/python/"/>
    
      <category term="jupyter notebook" scheme="http://yoursite-url/tags/jupyter-notebook/"/>
    
      <category term="webcrawling" scheme="http://yoursite-url/tags/webcrawling/"/>
    
      <category term="Today_I_Learned_by_Mel" scheme="http://yoursite-url/tags/Today-I-Learned-by-Mel/"/>
    
  </entry>
  
  <entry>
    <title>[python] 반복문 - while문</title>
    <link href="http://yoursite-url/2019/11/03/python-while-loop/"/>
    <id>http://yoursite-url/2019/11/03/python-while-loop/</id>
    <published>2019-11-03T07:58:39.000Z</published>
    <updated>2019-11-03T08:45:20.481Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>반복문 활용을 잘 못해서 복습용으로 써보는 포스팅</p><p>출처 : <a href="https://wikidocs.net/21" target="_blank" rel="noopener">점프투파이썬-while문</a><br>참고 : <a href="https://blog.naver.com/iklues_/221669244591" target="_blank" rel="noopener">Sing Happy Birthday-인문학도개발일지</a></p></blockquote><h1><span id="while-반복문-개요">while 반복문 개요</span></h1><hr><ul><li>프로그램은 위에서 아래로 실행된다.</li><li>조건문과 반복문으 논리형 값으로 작업한다.</li><li>따라서, while문 조건이 True인 동안 계속 작업을 수행한다.</li></ul><blockquote><p><strong>False인 경우</strong></p><ul><li>숫자: 0, 0.0</li><li>문자: 빈 문자열</li><li>length가 0(값이 없는)인 자료구조: 튜플, 리스트, 딕셔너리</li><li>None</li></ul></blockquote><h1><span id="while문-기본-구조">while문 기본 구조</span></h1><hr><p>특정 조건이 True인 동안 명령문을 반복해서 실행</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> 조건:</span><br><span class="line">  반복할 구문<span class="number">1</span></span><br><span class="line">  반복할 구문<span class="number">2</span></span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">treeHit = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> treeHit &lt; <span class="number">10</span>:</span><br><span class="line">  treeHit += <span class="number">1</span></span><br><span class="line">  print(<span class="string">"나무를 %d번 찍었습니다."</span> % treeHit)</span><br><span class="line">  <span class="keyword">if</span> treeHit == <span class="number">10</span>:</span><br><span class="line">    print(<span class="string">"나무 넘어갑니다."</span>)</span><br></pre></td></tr></table></figure><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">나무를 <span class="number">1</span>번 찍었습니다.</span><br><span class="line">나무를 <span class="number">2</span>번 찍었습니다.</span><br><span class="line">나무를 <span class="number">3</span>번 찍었습니다.</span><br><span class="line">나무를 <span class="number">4</span>번 찍었습니다.</span><br><span class="line">나무를 <span class="number">5</span>번 찍었습니다.</span><br><span class="line">나무를 <span class="number">6</span>번 찍었습니다.</span><br><span class="line">나무를 <span class="number">7</span>번 찍었습니다.</span><br><span class="line">나무를 <span class="number">8</span>번 찍었습니다.</span><br><span class="line">나무를 <span class="number">9</span>번 찍었습니다.</span><br><span class="line">나무를 <span class="number">10</span>번 찍었습니다.</span><br><span class="line">나무 넘어갑니다.</span><br></pre></td></tr></table></figure><h1><span id="while문-만들기">while문 만들기</span></h1><hr><p><strong><em>Q. 여러가지 선택지 중 '4’를 입력 받았을 때 종료하는 프로그램을 작성해보자.</em></strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">prompt = <span class="string">"""</span></span><br><span class="line"><span class="string">1. Add</span></span><br><span class="line"><span class="string">2. Del</span></span><br><span class="line"><span class="string">3. List</span></span><br><span class="line"><span class="string">4. Quit</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Enter number:"""</span></span><br><span class="line"></span><br><span class="line">number = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> number != <span class="number">4</span>:</span><br><span class="line">  print(prompt)</span><br><span class="line">  number = int(input())</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">.</span> <span class="string">Add</span></span><br><span class="line"><span class="number">2</span><span class="string">.</span> <span class="string">Del</span></span><br><span class="line"><span class="number">3</span><span class="string">.</span> <span class="string">List</span></span><br><span class="line"><span class="number">4</span><span class="string">.</span> <span class="string">Quit</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Enter number:</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span><span class="string">.</span> <span class="string">Add</span></span><br><span class="line"><span class="number">2</span><span class="string">.</span> <span class="string">Del</span></span><br><span class="line"><span class="number">3</span><span class="string">.</span> <span class="string">List</span></span><br><span class="line"><span class="number">4</span><span class="string">.</span> <span class="string">Quit</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Enter number:</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span><span class="string">.</span> <span class="string">Add</span></span><br><span class="line"><span class="number">2</span><span class="string">.</span> <span class="string">Del</span></span><br><span class="line"><span class="number">3</span><span class="string">.</span> <span class="string">List</span></span><br><span class="line"><span class="number">4</span><span class="string">.</span> <span class="string">Quit</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Enter number:</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span><span class="string">.</span> <span class="string">Add</span></span><br><span class="line"><span class="number">2</span><span class="string">.</span> <span class="string">Del</span></span><br><span class="line"><span class="number">3</span><span class="string">.</span> <span class="string">List</span></span><br><span class="line"><span class="number">4</span><span class="string">.</span> <span class="string">Quit</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Enter number:</span></span><br><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure><h1><span id="break-while문-강제로-빠져나가기">break - while문 강제로 빠져나가기</span></h1><hr><p><strong><em>Q. 커피 자판기 예제</em></strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">coffee = <span class="number">10</span></span><br><span class="line">money = <span class="number">300</span>    <span class="comment"># money 값은 300으로 고정, 계속 True</span></span><br><span class="line"><span class="keyword">while</span> money:    <span class="comment"># money 값이 True인 동안</span></span><br><span class="line">  print(<span class="string">"돈을 받았으니 커피를 줍니다."</span>)</span><br><span class="line">  coffee -= coffee</span><br><span class="line">  print(<span class="string">"남은 커피의 양은 %d개입니다."</span> % coffee)</span><br><span class="line">  <span class="keyword">if</span> coffee == <span class="number">0</span>:</span><br><span class="line">    print(<span class="string">"커피가 다 떨어졌습니다. 판매를 중지합니다."</span>)</span><br><span class="line">    <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>money 값이 300으로 고정되어 있으므로 <code>while money:</code>에서 money는 항상 참이다. 따라서 <code>coffee -= 1</code>에 의해 <code>coffee</code>값이 음수가 되더라도 계속 실행되는 무한 루프를 돌게 된다.<br>if문 속에서 <strong>break</strong> 문에 의해 while문을 빠져나가게 된다.<br><br><br><strong><em>Q. 위의 예제를 활용하여 실제 자판기 작동 과정과 비슷하게 만들어보자.</em></strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">coffee = <span class="number">5</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">  money = int(input(<span class="string">"돈을 넣어주세요:"</span>))</span><br><span class="line">  <span class="keyword">if</span> money == <span class="number">300</span>:</span><br><span class="line">    print(<span class="string">"커피를 줍니다."</span>)</span><br><span class="line">    coffee -= <span class="number">1</span></span><br><span class="line">  <span class="keyword">elif</span> money &gt; <span class="number">300</span>:</span><br><span class="line">    print(<span class="string">"거스름돈 %d를 주고 커피를 줍니다."</span> % (money - <span class="number">300</span>))</span><br><span class="line">    coffee -= <span class="number">1</span></span><br><span class="line">  <span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"돈을 다시 돌려주고 커피를 주지 않습니다."</span>)</span><br><span class="line">    print(<span class="string">"남은 커피의 양은 %d개 입니다."</span> % coffee)</span><br><span class="line">  <span class="keyword">if</span> coffee == <span class="number">0</span>:</span><br><span class="line">    print(<span class="string">"커피가 다 떨어졌습니다. 판매를 중지합니다."</span>)</span><br><span class="line">    <span class="keyword">break</span></span><br></pre></td></tr></table></figure><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">돈을 넣어주세요:<span class="number">4000</span></span><br><span class="line">거스름돈 <span class="number">3700</span>를 주고 커피를 줍니다.</span><br><span class="line">돈을 넣어주세요:<span class="number">300</span></span><br><span class="line">커피를 줍니다.</span><br><span class="line">돈을 넣어주세요:<span class="number">200</span></span><br><span class="line">돈을 다시 돌려주고 커피를 주지 않습니다.</span><br><span class="line">남은 커피의 양은 <span class="number">3</span>개 입니다.</span><br><span class="line">돈을 넣어주세요:<span class="number">300</span></span><br><span class="line">커피를 줍니다.</span><br><span class="line">돈을 넣어주세요:<span class="number">300</span></span><br><span class="line">커피를 줍니다.</span><br><span class="line">돈을 넣어주세요:<span class="number">300</span></span><br><span class="line">커피를 줍니다.</span><br><span class="line">커피가 다 떨어졌습니다. 판매를 중지합니다.</span><br></pre></td></tr></table></figure><h1><span id="while문과-continue">while문과 continue</span></h1><hr><p>while문 안의 문장을 수행할 때 입력 조건을 검사해서 조건에 맞지 않으면 while문을 빠져나간다.<br>그런데 while문을 빠져나가지 않고 while문의 맨 처음 조건문으로 다시 돌아가게 만들고 싶은 경우 continue문을 사용한다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> a &lt; <span class="number">10</span>:</span><br><span class="line">  a += <span class="number">1</span></span><br><span class="line">  <span class="keyword">if</span> a % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">    <span class="keyword">continue</span></span><br><span class="line">  print(a)</span><br></pre></td></tr></table></figure><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">9</span></span><br></pre></td></tr></table></figure><p>a가 10보다 작은 동안 a는 1만큼씩 계속 증가한다. <code>if a%2 == 0</code>이 참이 되는 경우는 a가 짝수일 때이므로 continue문장을 수행한다. 따라서 a가 짝수이면 <code>print(a)</code>는 수행되지 않는다.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;반복문 활용을 잘 못해서 복습용으로 써보는 포스팅&lt;/p&gt;
&lt;p&gt;출처 : &lt;a href=&quot;https://wikidocs.net/21&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;점프투파이썬-while문&lt;/a&gt;&lt;b
      
    
    </summary>
    
    
      <category term="Python" scheme="http://yoursite-url/categories/Python/"/>
    
    
      <category term="TIL" scheme="http://yoursite-url/tags/TIL/"/>
    
      <category term="python" scheme="http://yoursite-url/tags/python/"/>
    
      <category term="주피터노트북" scheme="http://yoursite-url/tags/%EC%A3%BC%ED%94%BC%ED%84%B0%EB%85%B8%ED%8A%B8%EB%B6%81/"/>
    
      <category term="by_Mel" scheme="http://yoursite-url/tags/by-Mel/"/>
    
      <category term="파이썬반복문" scheme="http://yoursite-url/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC%EB%B0%98%EB%B3%B5%EB%AC%B8/"/>
    
      <category term="점프투파이썬" scheme="http://yoursite-url/tags/%EC%A0%90%ED%94%84%ED%88%AC%ED%8C%8C%EC%9D%B4%EC%8D%AC/"/>
    
      <category term="python_while" scheme="http://yoursite-url/tags/python-while/"/>
    
  </entry>
  
  <entry>
    <title>[python] 반복문 - for문</title>
    <link href="http://yoursite-url/2019/11/03/python-for-loop/"/>
    <id>http://yoursite-url/2019/11/03/python-for-loop/</id>
    <published>2019-11-03T05:40:13.000Z</published>
    <updated>2019-11-03T08:45:24.825Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>반복문 활용을 잘 못해서 복습용으로 써보는 포스팅</p><p>출처 : <a href="https://wikidocs.net/22" target="_blank" rel="noopener">점프투파이썬-for문</a><br>참고 : <a href="https://blog.naver.com/iklues_/221671467901" target="_blank" rel="noopener">Sing Happy Birthday-인문학도개발일지</a></p></blockquote><h1><span id="for문-기본구조">for문 기본구조</span></h1><hr><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> 변수 <span class="keyword">in</span> 리스트(또는 튜플, 문자열):</span><br><span class="line">  수행할 문장<span class="number">1</span></span><br><span class="line">  수행할 문장<span class="number">2</span></span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><h1><span id="리스트와-for문">리스트와 for문</span></h1><hr><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">num_list = [<span class="string">'one'</span>, <span class="string">'two'</span>, <span class="string">'three'</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> num_list:</span><br><span class="line">  print(i)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;one</span><br><span class="line">&gt;two</span><br><span class="line">&gt;three</span><br></pre></td></tr></table></figure><p>위 코드를 실행하면 num_list의 요소가 순서대로 i에 대입되어 print(i) 문장을 수행하고 리스트 마지막 요소 까지 반복한다.</p><h1><span id="튜플과-for문">튜플과 for문</span></h1><hr><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">my_tuple = [(<span class="number">1</span>,<span class="number">2</span>), (<span class="number">3</span>,<span class="number">4</span>), (<span class="number">5</span>,<span class="number">6</span>)]</span><br><span class="line"><span class="keyword">for</span> (first, last) <span class="keyword">in</span> a:</span><br><span class="line">  print(first+last)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="number">3</span></span><br><span class="line">&gt;<span class="number">7</span></span><br><span class="line">&gt;<span class="number">11</span></span><br></pre></td></tr></table></figure><p>튜플의 각각의 요소가 자동으로 (first, last)변수에 대입된다.</p><h1><span id="for문-응용">for문 응용</span></h1><hr><p><strong><em>Q. 총 5명의 학생이 시험을 보았는데 시험 점수가 60점이 넘으면 합격이고 그렇지 않으면 불합격이다. 합격인지 불합격인지 결과를 보여 주시오.</em></strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">marks = [<span class="number">90</span>, <span class="number">25</span>, <span class="number">67</span>, <span class="number">45</span>, <span class="number">80</span>]</span><br><span class="line"></span><br><span class="line">number = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> marks:</span><br><span class="line">  number += <span class="number">1</span></span><br><span class="line">  <span class="keyword">if</span> i &gt;= <span class="number">60</span>:</span><br><span class="line">    print(<span class="string">"&#123;&#125;번 학생은 합격입니다."</span>.format(number))</span><br><span class="line">  <span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"&#123;&#125;번 학생은 불합격입니다."</span>.format(number))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="number">1</span>번 학생은 합격입니다.</span><br><span class="line">&gt;<span class="number">2</span>번 학생은 불합격입니다.</span><br><span class="line">&gt;<span class="number">3</span>번 학생은 합격입니다.</span><br><span class="line">&gt;<span class="number">4</span>번 학생은 불합격입니다.</span><br><span class="line">&gt;<span class="number">5</span>번 학생은 합격입니다.</span><br></pre></td></tr></table></figure><h1><span id="for문과-continue">for문과 continue</span></h1><hr><p>for문 안의 문장을 수행하는 도중 continue문을 만나면 for문의 처음으로 돌아간다.<br><strong><em>Q. 위 문제에서 60점을 넘은 합격자에게 축하 메시지를 보내고 나머지에게는 아무 메시지도 전하지 않는 프로그램을 작성해보자.</em></strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">marks = [<span class="number">90</span>, <span class="number">25</span>, <span class="number">67</span>, <span class="number">45</span>, <span class="number">80</span>]</span><br><span class="line"></span><br><span class="line">number = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> marks:</span><br><span class="line">  number += <span class="number">1</span></span><br><span class="line">  <span class="keyword">if</span> i &lt; <span class="number">60</span>:</span><br><span class="line">    <span class="keyword">continue</span></span><br><span class="line">  print(<span class="string">"&#123;&#125;번 학생 축하합니다. 합격입니다."</span>.format(number))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="number">1</span>번 학생 축하합니다. 합격입니다.</span><br><span class="line">&gt;<span class="number">3</span>번 학생 축하합니다. 합격입니다.</span><br><span class="line">&gt;<span class="number">5</span>번 학생 축하합니다. 합격입니다.</span><br></pre></td></tr></table></figure><h1><span id="for-in-연관-내장함수">for in 연관 내장함수</span></h1><hr><h2><span id="range">range()</span></h2><ul><li>range([시작값], 멈춤값, [증감값]) : []는 생략 가능</li><li>시작값은 포함, 멈춤값은 포함X</li><li>시작값 생략시 0이 기본값</li><li>증감값 생략시 1이 기본값</li><li>멈춤값은 생략 불가<br><img src="https://blogfiles.pstatic.net/MjAxOTEwMDdfODYg/MDAxNTcwNDA5NDUyNDA3.k9MBnzkzcnnDIWlDvKjluZRAfMvBzOl5lrXlfKVzbZ8g.fts1Rjtb63ZTSpwDeNnINkdERHJPcLUlV1FZTz5q_Gwg.PNG.iklues_/image.png" alt="range함수" title="파이썬 range함수 용례"><br><strong><em>Q. 위의 문제를 range함수를 활용해서 해결해보자.</em></strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">marks = [<span class="number">90</span>, <span class="number">25</span>, <span class="number">67</span>, <span class="number">45</span>, <span class="number">80</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(marks)):</span><br><span class="line">  <span class="keyword">if</span> marks[i] &lt; <span class="number">60</span>:</span><br><span class="line">    <span class="keyword">continue</span></span><br><span class="line">  print(<span class="string">"&#123;&#125;번 학생 축하합니다. 합격입니다."</span>.format(i+<span class="number">1</span>))</span><br></pre></td></tr></table></figure><h2><span id="enumerate">enumerate()</span></h2><ul><li>반복 조회시 현재 원소의 인덱스와 원소를 튜플로 묶어서 반환</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">s = [<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, <span class="string">'D'</span>]</span><br><span class="line"><span class="keyword">for</span> i, ss <span class="keyword">in</span> enumerate(s):</span><br><span class="line">  <span class="keyword">if</span> i%<span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">    print(i, ss)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="number">0</span> A</span><br><span class="line">&gt;<span class="number">2</span> C</span><br></pre></td></tr></table></figure><ul><li>전달인자 start : 시작할 때 인덱스 값을 지정, 기본값은 0</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">l = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line"><span class="keyword">for</span> i, num <span class="keyword">in</span> enumerate(l, start = <span class="number">100</span>):</span><br><span class="line">  print(i, num)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="number">100</span> <span class="number">1</span></span><br><span class="line">&gt;<span class="number">101</span> <span class="number">2</span></span><br><span class="line">&gt;<span class="number">102</span> <span class="number">3</span></span><br><span class="line">&gt;<span class="number">103</span> <span class="number">4</span></span><br></pre></td></tr></table></figure><h2><span id="zip">zip()</span></h2><ul><li>여러개의 자료구조 객체를 받아 같은 인덱스 값끼리 튜플로 묶어서 반환</li><li>반복할 때 마다 같은 인덱스의 값들을 묶어서 반환</li><li>묶는 자료구조 객체의 개수는 상관없다.</li><li>각 자료구조 객체의 크기가 다를 경우 작은 것의 개수에 맞춘다.</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ids = [<span class="string">'id-1'</span>, <span class="string">'id-2'</span>, <span class="string">'id-3'</span>, <span class="string">'id-4'</span>]</span><br><span class="line">ages = [<span class="number">20</span>, <span class="number">25</span>, <span class="number">30</span>, <span class="number">28</span>]</span><br><span class="line">talls = [<span class="number">180</span>, <span class="number">178</span>, <span class="number">184</span>, <span class="number">182</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> info <span class="keyword">in</span> zip(ids, ages, talls):</span><br><span class="line">  print(info)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;(<span class="string">'id-1'</span>, <span class="number">20</span>, <span class="number">180</span>)</span><br><span class="line">&gt;(<span class="string">'id-2'</span>, <span class="number">25</span>, <span class="number">178</span>)</span><br><span class="line">&gt;(<span class="string">'id-3'</span>, <span class="number">30</span>, <span class="number">184</span>)</span><br><span class="line">&gt;(<span class="string">'id-4'</span>, <span class="number">28</span>, <span class="number">182</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> id, age, tall <span class="keyword">in</span> zip(ids, ages, talls):</span><br><span class="line">  print(<span class="string">f'아이디:<span class="subst">&#123;id&#125;</span>, 나이:<span class="subst">&#123;age&#125;</span>, 키:<span class="subst">&#123;tall&#125;</span>'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;아이디:id<span class="number">-1</span>, 나이:<span class="number">20</span>, 키:<span class="number">180</span></span><br><span class="line">&gt;아이디:id<span class="number">-2</span>, 나이:<span class="number">25</span>, 키:<span class="number">178</span></span><br><span class="line">&gt;아이디:id<span class="number">-3</span>, 나이:<span class="number">30</span>, 키:<span class="number">184</span></span><br><span class="line">&gt;아이디:id<span class="number">-4</span>, 나이:<span class="number">28</span>, 키:<span class="number">182</span></span><br></pre></td></tr></table></figure><h1><span id="리스트-내포컴프리헨션">리스트 내포(컴프리헨션)</span></h1><hr><ul><li>기존 자료구조가 가진 원소들을 이용해 새로운 자료구조를 만드는 구문</li><li>주로 기존 자료구조의 원소들을 처리한 결과를 새로운 자료구조에 넣을 때 사용</li><li><strong>튜플 컴프리헨션은 없다.</strong></li><li>딕셔너리/집합 컴프리헨션은 파이썬 3.0부터 지원</li></ul><h2><span id="리스트-컴프리헨션">리스트 컴프리헨션</span></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># for문을 하나만 사용할 때</span></span><br><span class="line">[표현식 <span class="keyword">for</span> 항목 <span class="keyword">in</span> 반복가능객체 <span class="keyword">if</span> 조건문]</span><br><span class="line"><span class="comment"># for문을 두 개 이상 사용할 때</span></span><br><span class="line">[표현식 <span class="keyword">for</span> 항목<span class="number">1</span> <span class="keyword">in</span> 반복가능객체<span class="number">1</span> <span class="keyword">if</span> 조건문<span class="number">1</span></span><br><span class="line">       <span class="keyword">for</span> 항목<span class="number">2</span> <span class="keyword">in</span> 반복가능객체<span class="number">2</span> <span class="keyword">if</span> 조건문<span class="number">2</span></span><br><span class="line">       ...</span><br><span class="line">       <span class="keyword">for</span> 항목n <span class="keyword">in</span> 반복가능객체n <span class="keyword">if</span> 조건문n]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">results = [num * <span class="number">10</span> <span class="keyword">for</span> num <span class="keyword">in</span> range(<span class="number">10</span>)]</span><br><span class="line">results</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;[<span class="number">0</span>, <span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>, <span class="number">60</span>, <span class="number">70</span>, <span class="number">80</span>, <span class="number">90</span>]</span><br></pre></td></tr></table></figure><h2><span id="딕셔너리-컴프리헨션">딕셔너리 컴프리헨션</span></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">l = [<span class="number">0</span>, <span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>, <span class="number">60</span>, <span class="number">70</span>, <span class="number">80</span>, <span class="number">90</span>]</span><br><span class="line">&#123;<span class="string">'key'</span>+str(i+<span class="number">1</span>):num+<span class="number">10</span> <span class="keyword">for</span> i, num <span class="keyword">in</span> enumerate(l)&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt;</span><br><span class="line">&#123;<span class="string">'key1'</span>: <span class="number">10</span>,</span><br><span class="line"> <span class="string">'key2'</span>: <span class="number">20</span>,</span><br><span class="line"> <span class="string">'key3'</span>: <span class="number">30</span>,</span><br><span class="line"> <span class="string">'key4'</span>: <span class="number">40</span>,</span><br><span class="line"> <span class="string">'key5'</span>: <span class="number">50</span>,</span><br><span class="line"> <span class="string">'key6'</span>: <span class="number">60</span>,</span><br><span class="line"> <span class="string">'key7'</span>: <span class="number">70</span>,</span><br><span class="line"> <span class="string">'key8'</span>: <span class="number">80</span>,</span><br><span class="line"> <span class="string">'key9'</span>: <span class="number">90</span>,</span><br><span class="line"> <span class="string">'key10'</span>: <span class="number">100</span>&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;반복문 활용을 잘 못해서 복습용으로 써보는 포스팅&lt;/p&gt;
&lt;p&gt;출처 : &lt;a href=&quot;https://wikidocs.net/22&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;점프투파이썬-for문&lt;/a&gt;&lt;br&gt;
      
    
    </summary>
    
    
      <category term="Python" scheme="http://yoursite-url/categories/Python/"/>
    
    
      <category term="TIL" scheme="http://yoursite-url/tags/TIL/"/>
    
      <category term="python" scheme="http://yoursite-url/tags/python/"/>
    
      <category term="주피터노트북" scheme="http://yoursite-url/tags/%EC%A3%BC%ED%94%BC%ED%84%B0%EB%85%B8%ED%8A%B8%EB%B6%81/"/>
    
      <category term="by_Mel" scheme="http://yoursite-url/tags/by-Mel/"/>
    
      <category term="python_for_in" scheme="http://yoursite-url/tags/python-for-in/"/>
    
      <category term="파이썬반복문" scheme="http://yoursite-url/tags/%ED%8C%8C%EC%9D%B4%EC%8D%AC%EB%B0%98%EB%B3%B5%EB%AC%B8/"/>
    
      <category term="점프투파이썬" scheme="http://yoursite-url/tags/%EC%A0%90%ED%94%84%ED%88%AC%ED%8C%8C%EC%9D%B4%EC%8D%AC/"/>
    
  </entry>
  
  <entry>
    <title>[웹 크롤링] Requests</title>
    <link href="http://yoursite-url/2019/11/02/TIL-by-Mel/"/>
    <id>http://yoursite-url/2019/11/02/TIL-by-Mel/</id>
    <published>2019-11-02T04:34:04.000Z</published>
    <updated>2019-11-25T11:33:11.910Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>from 2019/10/31</p><p>웹 크롤링 정리 중</p></blockquote><h1><span id="url">URL</span></h1><hr><ul><li>URL(Uniform Resource Locator)<ul><li>URL의 구성요소<ul><li>스키마(schema): 통신 방식</li><li>호스트(host): 서버 주소</li><li>패스(path): 서버에서 문서의 위치</li><li>쿼리(query): 문서에 전달하는 추가 정보</li></ul></li></ul></li><li>URL 예</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://search.naver.com:80/search.naver?sm=top_hty&amp;fbm=1&amp;ie=utf8&amp;query=scraping</span><br></pre></td></tr></table></figure><ul><li>스키마(scheme): https://</li><li>호스트(host): <a href="http://search.naver.com" target="_blank" rel="noopener">search.naver.com</a></li><li>포트번호(port): 80. 웹브라우저들은 port 번호 생략시 80으로 전송된다.</li><li>자원경로(path): search.naver</li><li>쿼리스트링(query): ?sm=top_hty&amp;fbm=1&amp;ie=utf8&amp;query=scraping</li></ul><h1><span id="urllib-모듈-url-분석">urllib 모듈 - url 분석</span></h1><hr><ul><li>urlib<ul><li>url과 관련된 다양한 기능을 제공하는 파이썬 내장 모듈</li><li>url 경로 합치기</li><li>url 구문 분석</li><li>url의 자원(페이지) 요청</li></ul></li><li>url 분석</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line">url = <span class="string">'https://search.naver.com:80/search.naver?sm=top_hty&amp;fbm=1&amp;ie=utf8&amp;query=scraping'</span></span><br><span class="line">p = parse.urlparse(url)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 스키마</span></span><br><span class="line">p.scheme</span><br><span class="line"><span class="comment"># 호스트</span></span><br><span class="line">p.hostname</span><br><span class="line"><span class="comment"># 포트번호</span></span><br><span class="line"><span class="comment"># G: url에 없으면 안 나온다.</span></span><br><span class="line">p.port</span><br><span class="line"><span class="comment"># 패스(자원경로)</span></span><br><span class="line">p.path</span><br><span class="line"><span class="comment"># 쿼리</span></span><br><span class="line">p.query</span><br></pre></td></tr></table></figure><h1><span id="url-합치기">URL 합치기</span></h1><hr><ul><li>parse.urljoin(base, url)<ul><li>host는 동일하고 path 이후가 바뀌는 경우; 같은 사이트의 다른 자원을 조회할 때 유용</li><li>중복되는 url을 base url로 지정하고 바뀌는 부분만 붙이면 편리</li><li><code>base</code>+<code>/</code>+<code>url</code>형태로 합쳐준다.</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line">base_url = <span class="string">'http://main.com'</span></span><br><span class="line">path1 = <span class="string">'/news/it.html'</span></span><br><span class="line">path2 = <span class="string">'/news/sports.html'</span></span><br><span class="line">path3 = <span class="string">'/shopping/cloth.html'</span></span><br><span class="line">print(parse.urljoin(base_url, path1))</span><br><span class="line">print(parse.urljoin(base_url, path2))</span><br><span class="line">print(parse.urljoin(base_url, path3))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">path = [path1, path2, path3]</span><br><span class="line"><span class="keyword">for</span> p <span class="keyword">in</span> path:</span><br><span class="line">    url = parse.urljoin(base_url, p)</span><br><span class="line">    print(url, <span class="string">'요청'</span>)</span><br></pre></td></tr></table></figure><h1><span id="requests-모듈">Requests 모듈</span></h1><hr><ul><li>HTTP 요청을 처리하는 파이썬 패키지</li><li>쿠키, 헤더정보 등 HTTP의 다양한 요청처리 지원</li><li>get, host 방식 모두 지원</li><li>내장 라이브러리 X, 별도의 설치 필요</li><li>아래 둘 중 하나를 아나콘다 프롬프트에 입력</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install requests2</span><br><span class="line">conda install -c conda-forge requests</span><br></pre></td></tr></table></figure><h1><span id="요청-파라미터-전달">요청 파라미터 전달</span></h1><hr><ul><li>요청파라미터란?<ul><li>서버가 일하기 위해 클라이언트로 부터 받아야하는 값들</li><li>name=value 형태이며 여러개일 경우 &amp;로 연결해서 전송됨</li></ul></li><li>Get 요청시 queryString 으로 전달<ul><li>querystring : URL 뒤에 붙여서 전송한다.</li><li>ex) <a href="https://search.naver.com/search.naver?sm=top_hty&amp;fbm=1&amp;ie=utf8&amp;query=python" target="_blank" rel="noopener">https://search.naver.com/search.naver?sm=top_hty&amp;fbm=1&amp;ie=utf8&amp;query=python</a></li><li>requests.get() 요청시<ul><li>url 뒤에 querystring으로 붙여서 전송</li><li>dictionary 에 name=value 형태로 만들어 매개변수 params에 전달</li></ul></li></ul></li><li>Post 요청시 요청정보의 body에 넣어 전달</li><li>HTTP 요청 헤더(Request Header)<ul><li>HTTP 요청시 웹브라우저가 client의 여러 부가적인 정보들을 Key-Value 쌍 형식으로 전달한다.<ul><li>accept: 클라이언트가 처리가능한 content 타입 (Mime-type 형식으로 전달)</li><li>accept-language: 클라이언트가 지원하는 언어(ex: ko, en-US)</li><li>host: 요청한 host</li><li>user-agent: 웹브라우저 종류</li></ul></li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://www.pythonscraping.com/pages/warandpeace.html'</span></span><br><span class="line"></span><br><span class="line">res = requests.get(url)</span><br><span class="line">print(res.status_code)</span><br><span class="line"><span class="keyword">if</span> res.status_code == <span class="number">200</span>:</span><br><span class="line">  print(res.text)</span><br></pre></td></tr></table></figure><h1><span id="요청함수">요청함수</span></h1><hr><ul><li>http 프로토콜은 왜 요청하느냐에 따라 요청 방법을 여러가지 만들어둠<ul><li>요청방식 두 가지: get(목적: sql의 select), post(목적: sql의 insert)</li></ul></li><li><code>requests.get(URL)</code><ul><li>주요 매개변수<ul><li>params: 요청파라미터를 dictionary나 tuple로 전달</li><li>headers: HTTP 요청 header를 dictionary로 전달<ul><li>‘User-Agent’, ‘Referer’ 헤더 설정</li></ul></li><li>cookies: 쿠키정보를 전달</li></ul></li><li>응답 결과를 Response 객체에 담아 반환<ul><li>Response의 속성을 이용해 응답결과를 조회</li><li>status_code: HTTP 응답 상태코드</li><li>text: 응답내용(HTML)</li><li>content: 응답내용(응답결과가 binary 일 경우 - image, 동영상등)</li></ul></li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line"></span><br><span class="line">base_url = <span class="string">'http://httpbin.org'</span></span><br><span class="line">url = parse.urljoin(base_url, <span class="string">'get'</span>)</span><br><span class="line">print(url)</span><br><span class="line"></span><br><span class="line"><span class="comment">#요청 header 값 추가 및 변경. dictionary key: 헤더명, value: 헤더값</span></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">'User-Agent'</span>:<span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36'</span>,</span><br><span class="line">    <span class="string">'my-header'</span>:<span class="string">'test'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 요청파라미터 : GET- 1. url뒤에 queryString 붙여서 전송.</span></span><br><span class="line"><span class="comment">#                 2. params 매개변수에 dictionary로 넣어 설정.</span></span><br><span class="line"><span class="comment"># url = url+"?id=test-id&amp;password=11111"</span></span><br><span class="line"><span class="comment"># print(url)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#2.</span></span><br><span class="line">params = dict(id = <span class="string">'test-id2'</span>, password=<span class="string">'2345'</span>)</span><br><span class="line">params = [(<span class="string">'name'</span>, <span class="string">'홍길동'</span>), (<span class="string">'name'</span>, <span class="string">'이순신'</span>), (<span class="string">'name'</span>, <span class="string">'유관순'</span>)]</span><br><span class="line"></span><br><span class="line">res = requests.get(url, headers=headers, params=params)</span><br><span class="line"><span class="keyword">if</span> res.status_code == <span class="number">200</span>:</span><br><span class="line">    res_text = res.text</span><br><span class="line">    print(res_text)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"요청페이지를 못 가져옴."</span>, res.status_code)</span><br></pre></td></tr></table></figure><ul><li><code>requests.post(URL)</code><ul><li>크롤링시 많이 사용하지는 않는다.</li><li><strong>POST 방식 요청</strong></li><li>주요 매개변수<ul><li>datas : 요청파라미터를 dictionary나 tuple로 전달</li><li>headers: Get방식과 동일</li><li>cookies: Get방식과 동일</li></ul></li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line"></span><br><span class="line">base_url = <span class="string">'http://httpbin.org'</span></span><br><span class="line">url = parse.urljoin(base_url, <span class="string">'post'</span>)</span><br><span class="line">print(url)</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">'User-Agent'</span>:<span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36'</span>,</span><br><span class="line">    <span class="string">'my-header'</span>:<span class="string">'test'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># POST 요청파라미터 : datas 매개변수에 dictionary나 리스트로 전달. (querystring은 사용안함.)</span></span><br><span class="line"><span class="comment"># 매개변수 param X, data O</span></span><br><span class="line"></span><br><span class="line">datas = &#123;<span class="string">"id"</span>:<span class="string">"my-id"</span>, <span class="string">"pwd"</span>:<span class="string">'1111'</span>, <span class="string">"age"</span>:[<span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>]&#125;</span><br><span class="line">res = requests.post(url, headers=headers, data=datas)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> res.status_code == <span class="number">200</span>:</span><br><span class="line">    res_text = res.text</span><br><span class="line">    print(res_text)</span><br><span class="line"></span><br><span class="line"><span class="comment"># user agent : 웹브라우저 상태를 보고 뭔가 처리가 안 될 경우 응답 결과의 user agent를 확인</span></span><br></pre></td></tr></table></figure><h1><span id="http-요청정보-구조">HTTP 요청정보 구조</span></h1><hr><table><thead><tr><th style="text-align:center">구분자</th><th style="text-align:center">내용</th></tr></thead><tbody><tr><td style="text-align:center"><strong>요청라인</strong></td><td style="text-align:center">url</td></tr><tr><td style="text-align:center"><strong>header</strong></td><td style="text-align:center">클라이언트 웹브라우저 {name:value}</td></tr><tr><td style="text-align:center"><strong>body</strong></td><td style="text-align:center">post일 때는 요청 파라미터, get 방식일 대는 아무것도 없다. cf. get 방식일 때는 url 뒤에 요청파라미터 (ex. url?get방식 요청파라미터)</td></tr></tbody></table><h1><span id="http-응답정보">HTTP 응답정보</span></h1><hr><table><thead><tr><th style="text-align:center">구분자</th><th style="text-align:center">내용</th></tr></thead><tbody><tr><td style="text-align:center"><strong>응답라인</strong></td><td style="text-align:center">응답상태 코드</td></tr><tr><td style="text-align:center"><strong>header</strong></td><td style="text-align:center">응답하는 서버, 데이터 양식, 상태 등등 정보</td></tr><tr><td style="text-align:center"><strong>body</strong></td><td style="text-align:center">응답 내용, html, binary image, video 등…</td></tr></tbody></table><h1><span id="jsonjavascript-object-notation">JSON(JavaScript Object Notation)</span></h1><hr><ul><li>key-value 형태 또는 배열 형태의 text</li><li>다른 기종간 데이터 교환에 많이 이용</li><li>object와 array를 생성하는 문법을 이용해 만듦</li><li>JSON 모듈 : JSON 형식 문자열을 다루는 모듈<ul><li>loads(json문자열): JSON 형식 문자열을 dictionary/list로 변환</li><li>dumps(dictionary): dictionary를 JSON 형식 문자열로 변환</li></ul></li></ul><h1><span id="dumps-dictionary를-json-형식으로">Dumps : dictionary를 json 형식으로</span></h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line">d = &#123;<span class="string">'n1'</span>:<span class="string">'value'</span>, <span class="string">'n2'</span>:<span class="number">20</span>, <span class="string">'n3'</span>:<span class="literal">None</span>, <span class="string">'n4'</span>:<span class="literal">True</span>&#125;</span><br><span class="line"><span class="comment"># dictionary -&gt; json 문자열</span></span><br><span class="line">j_s = json.dumps(d)</span><br><span class="line">print(type(j_s), j_S)</span><br><span class="line"> <span class="comment"># 자바스크립트 기법으로 바뀐다. None -&gt; null, True -&gt; ture</span></span><br><span class="line"><span class="comment"># 키값이 문자열인 것을 확인할 수 있다. - &gt; j_s['n1'] 조회 불가, 딕셔너리 형태지만 딕셔너리가 아니니까!</span></span><br></pre></td></tr></table></figure><h1><span id="loads-json-형식-문자열을-dictionarylist로">Loads : json 형식 문자열을 dictionary/list로</span></h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">d2 = json.loads(j_s)</span><br><span class="line">print(d2)</span><br><span class="line">d2[<span class="string">'n1'</span>], d2[<span class="string">'n2]</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line">base_url = <span class="string">'http://httpbin.org'</span>   </span><br><span class="line">url = parse.urljoin(base_url, <span class="string">'post'</span>)    <span class="comment"># 반복문 활용시 post, get 병용할 때 활용</span></span><br><span class="line">print(url)</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">'User-Agent'</span>:<span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36'</span>,</span><br><span class="line">    <span class="string">'my-header'</span>:<span class="string">'test'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Post 요청 파라미터 : data 매개변수에 dictionary나 리스트로 전달.</span></span><br><span class="line"><span class="comment">#                    (queryStirng은 사용 안 함.)</span></span><br><span class="line"><span class="comment"># 매개변수 param X, data O</span></span><br><span class="line"></span><br><span class="line">datas = &#123;<span class="string">"id"</span>:<span class="string">"my-id"</span>, <span class="string">"pwd"</span>:<span class="string">'1111'</span>, <span class="string">"ages"</span>:[<span class="number">20</span>, <span class="number">30</span>, <span class="number">50</span>]&#125;</span><br><span class="line">res = requests.post(url, headers=headers, data=datas)    </span><br><span class="line"><span class="comment"># 요청파라미터를 datas로 받아온다는 점이 get과 다르다.</span></span><br><span class="line"><span class="keyword">if</span> res.status_code == <span class="number">200</span>:</span><br><span class="line">    res_text = res.text</span><br><span class="line">    print(res_text)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">if</span> res.status_code == <span class="number">200</span>:</span><br><span class="line">    res_text = res_text</span><br><span class="line">    res_dict = res.json() </span><br><span class="line">    <span class="comment"># 제이슨으로 변환해서 처리해주므로 굳이 load를 하지 않아도 됨</span></span><br><span class="line">    print(type(res_text), type(res_dict))</span><br><span class="line">    print(res_dict[<span class="string">'headers'</span>])</span><br><span class="line">    print(<span class="string">"----------------"</span>)</span><br><span class="line">    print(res_dict[<span class="string">'headers'</span>][<span class="string">'Accept'</span>])</span><br></pre></td></tr></table></figure><h1><span id="응답결과response-조회">응답결과(Response) 조회</span></h1><ul><li>HTTP 응답 상태코드<ul><li>2XX: 성공<ul><li>200: OK</li></ul></li><li>3XX: 다른 주소로 이동 (이사)<ul><li>300번대이면 자동으로 이동해 준다. 크롤링시는 볼일이 별로 없다.</li></ul></li><li>4XX: 클라이언트 오류 (사용자가 잘못한 것)<ul><li>404: 존재하지 않는 주소</li></ul></li><li>5XX: 서버 오류 (서버에서 문제생긴 것)<ul><li>500: 서버가 처리방법을 모르는 오류</li><li>503: 서버가 다운 등의 문제로 서비스 불가 상태</li></ul></li></ul></li></ul><h1><span id="예제">예제</span></h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 'url'에 접속하는 코드</span></span><br><span class="line"><span class="comment"># 초록색으로 된 단어들만 추출</span></span><br><span class="line"><span class="comment"># ToDo: 사이트 접근, 사이트 분석(크롤링할 대상, 가져올 데이터, 가져오려면 어떻게?=&gt; 개발자 도구 활용)</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://www.pythonscraping.com/pages/warandpeace.html'</span> </span><br><span class="line"><span class="comment"># 주소 넣어서 Enter 치면 나온다 -&gt; 요청 파라미터 없다는 것을 의미</span></span><br><span class="line"><span class="comment"># 요청파라미터 : 서버가 일하기 위해 클라이언트로 부터 받아야하는 값들</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 요청 </span></span><br><span class="line">req = requests.get(url)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 응답코드</span></span><br><span class="line">print(req.status_code)    <span class="comment"># 200이 나오면 정상</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 응답이 정상이면 응답 HTML을 읽어서 변수로 저장.</span></span><br><span class="line"><span class="keyword">if</span> req.status_code == <span class="number">200</span>:</span><br><span class="line">    req.text = req.text</span><br><span class="line"><span class="comment"># 위 응답이 정상이라면 응답 html 중 초록 단어들만 가져온다.</span></span><br><span class="line"><span class="comment"># &lt;span class = 'green'&gt;</span></span><br><span class="line"><span class="comment">## find를 쓸 경우</span></span><br><span class="line">soup = BeautifulSoup(req.text, <span class="string">'lxml'</span>)</span><br><span class="line">green_tag = soup.find_all(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>:<span class="string">'green'</span>&#125;)</span><br><span class="line">green_content_list = []</span><br><span class="line"><span class="keyword">for</span> tag <span class="keyword">in</span> green_tags:</span><br><span class="line">    green_contents_list.append(tag.get_text().replace(<span class="string">'\n'</span>, <span class="string">' '</span>).strip())</span><br><span class="line"><span class="comment"># tag.get_text 값을 contet_list에 append</span></span><br><span class="line"><span class="comment"># replace('\n', ' ') : 엔터값을 공백으로 대체</span></span><br><span class="line"><span class="comment"># strip() : 좌우공백 없애기</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## select를 쓸 경우</span></span><br><span class="line"><span class="comment"># 빨간색 문장들을 조회 - &lt;span class = 'red&gt;</span></span><br><span class="line">red_tags = soup.select(<span class="string">'span.red'</span>)</span><br><span class="line">red_content_list = []</span><br><span class="line"><span class="keyword">for</span> tag <span class="keyword">in</span> red_tags:</span><br><span class="line">    red_content_list.append(tag.get_text().strip())</span><br><span class="line"></span><br><span class="line">print(len(green_content_list), len(red_content_list))</span><br></pre></td></tr></table></figure><h1><span id="pickle로-파이썬-객체를-그대로-파일에-저장">Pickle로 파이썬 객체를 그대로 파일에 저장</span></h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'green_list.pkl'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    pickle.dump(green_content_list, f)</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'red_list.pkl'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    pickle.dump(red_cotent_list, f)</span><br><span class="line"><span class="comment"># 읽어올 때</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'green_list.pkl'</span>, <span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    green_list = pickle.load(f)</span><br><span class="line">green_list[:<span class="number">3</span>]   <span class="comment"># 세 개만 출력</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;from 2019/10/31&lt;/p&gt;
&lt;p&gt;웹 크롤링 정리 중&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;&lt;span id=&quot;url&quot;&gt;URL&lt;/span&gt;&lt;/h1&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;URL(Uniform Resource Lo
      
    
    </summary>
    
    
      <category term="Web Crawling" scheme="http://yoursite-url/categories/Web-Crawling/"/>
    
    
      <category term="TIL" scheme="http://yoursite-url/tags/TIL/"/>
    
      <category term="python" scheme="http://yoursite-url/tags/python/"/>
    
      <category term="webcrawling" scheme="http://yoursite-url/tags/webcrawling/"/>
    
      <category term="Today_I_Learned_by_Mel" scheme="http://yoursite-url/tags/Today-I-Learned-by-Mel/"/>
    
      <category term="주피터노트북" scheme="http://yoursite-url/tags/%EC%A3%BC%ED%94%BC%ED%84%B0%EB%85%B8%ED%8A%B8%EB%B6%81/"/>
    
  </entry>
  
  <entry>
    <title>[웹 크롤링] BeautifulSoup</title>
    <link href="http://yoursite-url/2019/11/02/post-name/"/>
    <id>http://yoursite-url/2019/11/02/post-name/</id>
    <published>2019-11-01T15:45:42.000Z</published>
    <updated>2019-11-03T03:34:59.950Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>from 2019/10/31</p><p>웹 크롤링 정리 중</p></blockquote><h1><span id="웹-크롤링web-crawling이란">웹 크롤링(Web Crawling)이란?</span></h1><hr><ul><li>웹 크롤링<ul><li>검색 엔진과 같은 여러 사이트에 있는 콘텐츠를 수집하는 작업</li><li>필요한 내용을 파싱하여 추출</li><li>아래 툴들이 필요하다.<ul><li><code>BeautifulSoup</code> : 웹 데이터 크롤링 또는 스크래핑을 할 때 사용하는 python 라이브러리, 가져온 페이지에서 원하는 항목만 but 동적인 처리 못함</li><li><code>Requests</code> : 웹에 있는 소스 가져오기</li><li><code>Selenium</code> : 동적 처리 가능하도록</li></ul></li></ul></li></ul><hr><h1><span id="beautifulsoup">BeautifulSoup</span></h1><hr><p>BeautifulSoup 라이브러리를 사용하기 위해 lxml을 설치 한다.</p><ul><li>BeautifulSoup<ul><li><code>HTML</code>이나 <code>XML</code> 문서 내에서 원하는 정보를 가져오기 위한 파이썬 라이브러리.</li><li>아래 둘 중 하나를 아나콘다 프롬프트에 입력한다.</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.</span></span><br><span class="line">conda install beautifulsoup4</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 2.</span></span><br><span class="line">pip install beautifulsoup4</span><br></pre></td></tr></table></figure><ul><li>lxml<ul><li>Beautifusoup에서 기본적으로 지원하는 파서보다 더 빠르게 동작하는 모듈.</li><li>아래 둘 중 하나를 아나콘다 프롬프트에 입력한다.</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.</span></span><br><span class="line">conda install lxml</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 2.</span></span><br><span class="line">pip install lxml</span><br></pre></td></tr></table></figure><hr><h1><span id="코딩패턴">코딩패턴</span></h1><hr><ol><li>BeautifulSoup 클래스 import</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br></pre></td></tr></table></figure><ol start="2"><li>BeautifulSoup 객체 생성</li></ol><ul><li>생성시 조회할 문서 내용 전달</li></ul>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> open(<span class="string">'example.html'</span>, <span class="string">'rt'</span>, encoding=<span class="string">'UTF-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">  doc = f.read()</span><br><span class="line">  print(doc)</span><br><span class="line"></span><br><span class="line"><span class="comment"># BeautifulSoup 객체 생성 - 분석할 HTML과 paser(분석기) 설정</span></span><br><span class="line">soup = BeautifulSoup(doc, <span class="string">'lxml'</span>)</span><br><span class="line">print(soup.prettify())</span><br></pre></td></tr></table></figure><ol start="3"><li>문서 내에서 필요한 정보 조회</li></ol><ul><li>태그이름과 태그 속성으로 조회</li><li>css selector를 이용해 조회</li><li>.표기법을 이용한 탐색</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># class가 animal인 것을 모두 찾기</span></span><br><span class="line">animal_list = soup.select(<span class="string">"div.animal"</span>)</span><br><span class="line">animal_list</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(type(animal_list[<span class="number">0</span>]))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> animal <span class="keyword">in</span> animal_list:</span><br><span class="line">  print(animal.get_text(), animal.text)</span><br></pre></td></tr></table></figure><hr><h1><span id="beautifulsoup-객체-생성">BeautifulSoup 객체 생성</span></h1><hr><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BeautifulSoup(html str, [,파서])</span><br></pre></td></tr></table></figure><ul><li>매개변수<ul><li>정보를 조회할 html을 string으로 전달</li><li>파서(Parser)<ul><li>html 분석기</li><li>html.parser: 기본 파서</li><li>lxml: 기본 파서보다 빠른 파서. html, xml 파싱 가능</li></ul></li></ul></li></ul><hr><h1><span id="tag-객체">Tag 객체</span></h1><hr><ul><li>Tag 객체<ul><li>문서내에서 원하는 정보 검색</li><li>하나의 태그(element)와 관련된 정보를 담은 객체</li><li>BeautifulSoup 조회 메소드들의 조회결과 반환타입</li></ul></li></ul><ul><li>주요 속성/메소드<ul><li><p>태그 속성값 조회</p><ul><li>tag객체.get(‘속성명’)</li><li>tag객체[‘속성명’]</li><li>tag.get(‘href’)</li><li>tag[‘href’]</li></ul></li><li><p>태그내 text값 조회</p><ul><li>tag객체.get_text()</li><li>tag객체.text</li></ul></li><li><p>contents 속성</p><ul><li>조회한 태그의 모든 자식 요소들을 리스트로 반환</li><li>child_list = tag객체.contents;</li></ul></li></ul></li></ul><hr><h1><span id="조회메소드">조회메소드</span></h1><hr><ul><li>태그 이름과 태그내의 속성으로 조회<ul><li>find_all(name=태그명, attrs={속성명:속성값, …})</li><li>find(name=태그명, attrs={속성명:속성값})<ul><li>일치하는 태그 반환</li><li>일치하는 태그가 여러개을 경우 첫번째 것만 반환</li></ul></li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'example.html'</span>, <span class="string">'rt'</span>, encoding=<span class="string">'UTF-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">  doc = f.read()</span><br><span class="line"></span><br><span class="line">soup = BeautifulSoup(doc, <span class="string">'lxml'</span>)</span><br><span class="line">ani_list = soup.find_all(<span class="string">"div"</span>, attrs=&#123;<span class="string">"calss"</span>:<span class="string">"animal"</span>&#125;)</span><br><span class="line"></span><br><span class="line">ani_list</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> ani <span class="keyword">in</span> ani_list:</span><br><span class="line"><span class="comment"># ani 타입 조회</span></span><br><span class="line">  print(type(ani))</span><br><span class="line"><span class="comment"># 속성값 조회</span></span><br><span class="line">  print(ani.get_text(), ani.text)</span><br><span class="line"><span class="comment"># 클래스명 조회</span></span><br><span class="line">  print(ani.get(<span class="string">'class'</span>), ani[<span class="string">'class'</span>]))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ani_1 = soup.find_all(<span class="string">'div'</span>, attrs=&#123;<span class="string">'id'</span>:<span class="string">'animal1'</span>&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 맞는지 확인</span></span><br><span class="line">ani_1 = soup.find_all(<span class="string">"div"</span>, attrs=&#123;<span class="string">'id'</span>:<span class="string">'animal1'</span>&#125;)</span><br><span class="line">ani_1.text</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a_list = soup.find_all(<span class="string">"a"</span>)</span><br><span class="line">a_list</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">links = []</span><br><span class="line">names = []</span><br><span class="line"><span class="keyword">for</span> a <span class="keyword">in</span> a_list:</span><br><span class="line">  links.append(a.get(<span class="string">'href'</span>))    <span class="comment"># a의 href 속성 값 조회</span></span><br><span class="line">  names.append(a.get_text())</span><br><span class="line">print(links)</span><br><span class="line">print(names)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">animal_cls = soup.find_all(attrs=&#123;<span class="string">'class'</span>:<span class="string">'animal'</span>&#125;)</span><br><span class="line">animal_cls</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a_list = soup.find_all(<span class="string">'a'</span>)</span><br><span class="line">a_list</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tag.findXXXX() : tag(부모) 내의 element를 찾는다.</span></span><br><span class="line"><span class="comment"># soup.findXXXX() : 전체 문서 내에서 element를 찾는다.</span></span><br><span class="line"></span><br><span class="line">ani_1 = soup.find(<span class="string">'div'</span>, attrs=&#123;<span class="string">'id'</span>:<span class="string">'animal1'</span>&#125;)</span><br><span class="line">ani = ani_1.find(attrs=&#123;<span class="string">'class'</span>:<span class="string">'animal'</span>&#125;)</span><br><span class="line">ani</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">soup.find(<span class="string">'div'</span>, attrs=&#123;<span class="string">'id'</span>:<span class="string">'animal1'</span>&#125;).find(attrs=&#123;<span class="string">'class'</span>:<span class="string">'animal'</span>&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="comment"># find(), find_all(): 태그명, 속성의 값에 정규표현식 pattern 사용할 수 있다.</span></span><br><span class="line">p = re.compile(<span class="string">r'kr$'</span>) <span class="comment">#kr$: kr로 끝나는 패턴.^kr : kr로 시작하는 패턴</span></span><br><span class="line">soup.find_all(<span class="string">'a'</span>, attrs=&#123;<span class="string">'href'</span>: p&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 모든 hx 태그</span></span><br><span class="line">p = re.compiler(<span class="string">r'h\d'</span>)    <span class="comment"># ₩d: 정수1개</span></span><br><span class="line">p = re.compile(<span class="string">r'h[1-3]'</span>)</span><br><span class="line">soup.find_all(p)</span><br></pre></td></tr></table></figure><ul><li>css selector를 이용해 조회<ul><li>select(selector=‘css셀렉터’)<ul><li>css셀렉터와 일치하는 tag들을 반환</li></ul></li><li>select_one(selector=‘css셀렉터’)<ul><li>css 셀렉터와 일치하는 tag 반환</li><li>일치하는 것이 여러개일 경우 첫번째 것만 반환</li></ul></li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 태그명</span></span><br><span class="line">soup.select_one(<span class="string">"div"</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">soup.select(<span class="string">'spna, a'</span>)    <span class="comment"># A, B A태그와 B태그</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ID로 조회</span></span><br><span class="line">soup.select_one(<span class="string">'#animal1'</span>)    <span class="comment"># 모든 태그 중 id가 animal1</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">soup. select_one(<span class="string">'div#animal2'</span>)    <span class="comment"># div 태그 중 id가 animal2</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># class로 조회</span></span><br><span class="line">soup.select(<span class="string">'.animal'</span>)    <span class="comment"># 모든 태그 중 조회</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">soup.select(<span class="string">'span.animal'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 하위 태그 조회</span></span><br><span class="line"><span class="comment"># 자식 태그 조회</span></span><br><span class="line">soup.select(<span class="string">"div#animal1 &gt; div.animal"</span>)</span><br><span class="line"><span class="comment"># div#animal1의 자식인 div.animal</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">soup.select(<span class="string">'ul a'</span>)    <span class="comment"># ul의 자손인 a</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;from 2019/10/31&lt;/p&gt;
&lt;p&gt;웹 크롤링 정리 중&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;&lt;span id=&quot;웹-크롤링web-crawling이란&quot;&gt;웹 크롤링(Web Crawling)이란?&lt;/span&gt;&lt;/h1&gt;
&lt;h
      
    
    </summary>
    
    
      <category term="Web Crawling" scheme="http://yoursite-url/categories/Web-Crawling/"/>
    
    
      <category term="TIL" scheme="http://yoursite-url/tags/TIL/"/>
    
      <category term="python" scheme="http://yoursite-url/tags/python/"/>
    
      <category term="webcrawling" scheme="http://yoursite-url/tags/webcrawling/"/>
    
      <category term="Today_I_Learned_by_Mel" scheme="http://yoursite-url/tags/Today-I-Learned-by-Mel/"/>
    
      <category term="주피터노트북" scheme="http://yoursite-url/tags/%EC%A3%BC%ED%94%BC%ED%84%B0%EB%85%B8%ED%8A%B8%EB%B6%81/"/>
    
  </entry>
  
  <entry>
    <title>[Hexo] Theme BeanTech</title>
    <link href="http://yoursite-url/2017/03/18/hexo-theme-beantech/"/>
    <id>http://yoursite-url/2017/03/18/hexo-theme-beantech/</id>
    <published>2017-03-18T01:51:24.000Z</published>
    <updated>2019-11-01T15:21:58.717Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Ported Theme of <a href="https://github.com/Huxpro/huxpro.github.io" target="_blank" rel="noopener">Hux Blog</a>, Thank <a href="https://github.com/Huxpro" target="_blank" rel="noopener">Huxpro</a> for designing such a flawless theme.</p><p>This BeanTech theme created by <a href="http://beantech.org" target="_blank" rel="noopener">YuHsuan</a> modified from the original Porter <a href="http://kaijun.rocks/hexo-theme-huxblog/" target="_blank" rel="noopener">Kaijun</a></p></blockquote><h1><span id="live-demo"></span></h1><hr><p><img src="http://beantech.org/img/beantech-desktop.png" alt="BeanTech Desktop"></p><h1><span id="usage">Usage</span></h1><hr><p>I publish the whole project for your convenience, so you can just follow the instruction down below, then you can easily customiz your own blog!</p><p>Let’s begin!!!</p><h2><span id="init">Init</span></h2><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/YenYuHsuan/hexo-theme-beantech.git ./hexo-beantech</span><br><span class="line"><span class="built_in">cd</span> hexo-beantech</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><h2><span id="modify">Modify</span></h2><hr><p>Modify <code>_config.yml</code> file with your own info.<br>Especially the section:</p><h3><span id="deployment">Deployment</span></h3><p>Replace to your own repo!</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/&lt;yourAccount&gt;/&lt;repo&gt;</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">&lt;your-branch&gt;</span></span><br></pre></td></tr></table></figure><h3><span id="sidebar-settings">Sidebar settings</span></h3><p>Copy your avatar image to <code>&lt;root&gt;/img/</code> and modify the <code>_config.yml</code>:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">sidebar:</span> <span class="literal">true</span>    <span class="comment"># whether or not using Sidebar.</span></span><br><span class="line"><span class="attr">sidebar-about-description:</span> <span class="string">"&lt;your description&gt;"</span></span><br><span class="line"><span class="attr">sidebar-avatar:</span> <span class="string">img/&lt;your</span> <span class="string">avatar</span> <span class="string">path&gt;</span></span><br></pre></td></tr></table></figure><p>and activate your personal widget you like</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">widgets:</span>         <span class="comment"># here are widget you can use, you can comment out</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">featured-tags</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">short-about</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">recent-posts</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">friends-blog</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">archive</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">category</span></span><br></pre></td></tr></table></figure><p>if you want to add sidebar widget, please add at <code>layout/_widget</code>.</p><h3><span id="signature-setup">Signature Setup</span></h3><p>Copy your signature image to <code>&lt;root&gt;/img/signature</code> and modify the <code>_config.yml</code>:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">signature:</span> <span class="literal">true</span>   <span class="comment"># show signature</span></span><br><span class="line"><span class="attr">signature-img:</span> <span class="string">img/signature/&lt;your-signature-ID&gt;</span></span><br></pre></td></tr></table></figure><h3><span id="go-to-top-icon-setup">Go to top icon Setup</span></h3><p>My icon is using iron man, you can change to your own icon at <code>css/image</code>.</p><h3><span id="post-tag">Post tag</span></h3><p>You can decide to show post tags or not.</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">home_posts_tag:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p><img src="home_posts_tag-true.png" alt="home_posts_tag-true"></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">home_posts_tag:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p><img src="home_posts_tag-false.png" alt="home_posts_tag-false"></p><h3><span id="markdown-render">Markdown render</span></h3><p>My markdown render engine plugin is <a href="https://github.com/celsomiranda/hexo-renderer-markdown-it" target="_blank" rel="noopener">hexo-renderer-markdown-it</a>.</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Markdown-it config</span></span><br><span class="line"><span class="comment">## Docs: https://github.com/celsomiranda/hexo-renderer-markdown-it/wiki</span></span><br><span class="line"><span class="attr">markdown:</span></span><br><span class="line">  <span class="attr">render:</span></span><br><span class="line">    <span class="attr">html:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">xhtmlOut:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">breaks:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">linkify:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">typographer:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">quotes:</span> <span class="string">'“”‘’'</span></span><br></pre></td></tr></table></figure><p>and if you want to change the header anchor ‘ℬ’, you can go to <code>layout/post.ejs</code> to change it.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span>(<span class="string">"https://cdn.bootcss.com/anchor-js/1.1.1/anchor.min.js"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        anchors.options = &#123;</span><br><span class="line">          visible: <span class="string">'hover'</span>,</span><br><span class="line">          placement: <span class="string">'left'</span>,</span><br><span class="line">          icon: ℬ <span class="comment">// this is the header anchor "unicode" icon</span></span><br><span class="line">        &#125;;</span><br></pre></td></tr></table></figure><h2><span id="hexo-basics">Hexo Basics</span></h2><hr><p>Some hexo command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo new post <span class="string">"&lt;post name&gt;"</span> <span class="comment"># you can change post to another layout if you want</span></span><br><span class="line">hexo clean &amp;&amp; hexo generate <span class="comment"># generate the static file</span></span><br><span class="line">hexo server <span class="comment"># run hexo in local environment</span></span><br><span class="line">hexo deploy <span class="comment"># hexo will push the static files automatically into the specific branch(gh-pages) of your repo!</span></span><br></pre></td></tr></table></figure><h1><span id="have-fun-_">Have fun ^_^</span></h1><hr><!-- Place this tag in your head or just before your close body tag. --><script async defer src="https://buttons.github.io/buttons.js"></script><!-- Place this tag where you want the button to render. --><p>Please <a class="github-button" href="https://github.com/YenYuHsuan/hexo-theme-beantech" data-icon="octicon-star" aria-label="Star YenYuHsuan/hexo-theme-beantech on GitHub" target="_blank" rel="noopener">Star</a> this Project if you like it! <a class="github-button" href="https://github.com/YenYuHsuan" aria-label="Follow @YenYuHsuan on GitHub" target="_blank" rel="noopener">Follow</a> would also be appreciated!<br>Peace!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Ported Theme of &lt;a href=&quot;https://github.com/Huxpro/huxpro.github.io&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hux Blog&lt;/a&gt;, Thank &lt;a h
      
    
    </summary>
    
    
    
      <category term="Hexo" scheme="http://yoursite-url/tags/Hexo/"/>
    
      <category term="Blog" scheme="http://yoursite-url/tags/Blog/"/>
    
  </entry>
  
</feed>
